<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>